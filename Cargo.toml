
[workspace]
members = [
    "./crates/ferrous-llm-*",
    "examples",
]
resolver = "2"

[workspace.package]
version = "0.5.1"
description = "LLM library"
authors = ["Andre Roelofs <andre@eurora-labs.com>"]
license = "Apache-2.0"
edition = "2024"

[workspace.dependencies]
tokio = { version = "1.47.1", default-features = false, features = ["full"] }
serde = "1.0"
serde_json = "1.0"
chrono = { version = "0.4", features = ["serde"] }
dotenv = "0.15"
futures = "0.3"
thiserror = "2.0.12"
url = { version = "2.5.4" }
ferrous-llm-core = { path = "./crates/ferrous-llm-core", version = "0.5.1" }
ferrous-llm-ollama = { path = "./crates/ferrous-llm-ollama", version = "0.5.1" }
ferrous-llm-anthropic = { path = "./crates/ferrous-llm-anthropic", version = "0.5.1" }
ferrous-llm-openai = { path = "./crates/ferrous-llm-openai", version = "0.5.1" }

[features]
default = []
full = ["openai", "ollama", "anthropic"]
openai = ["ferrous-llm-openai"]
ollama = ["ferrous-llm-ollama"]
anthropic = ["ferrous-llm-anthropic"]
dynamic-image = ["ferrous-llm-core/dynamic-image", "ferrous-llm-openai/dynamic-image", "ferrous-llm-ollama/dynamic-image", "ferrous-llm-anthropic/dynamic-image"]

# Add workspace-level package for e2e tests
[package]
name = "ferrous-llm"
version.workspace = true
description.workspace = true
authors.workspace = true
license.workspace = true
edition.workspace = true

[dependencies]
ferrous-llm-core = { path = "./crates/ferrous-llm-core", version = "0.5.1" }
ferrous-llm-openai = { path = "./crates/ferrous-llm-openai", version = "0.5.1", optional = true }
ferrous-llm-ollama = { path = "./crates/ferrous-llm-ollama", version = "0.5.1", optional = true }
ferrous-llm-anthropic = { path = "./crates/ferrous-llm-anthropic", version = "0.5.1", optional = true }
dotenv.workspace = true
tokio.workspace = true
futures.workspace = true
serde_json.workspace = true
chrono.workspace = true
thiserror.workspace = true

[dev-dependencies]
dotenv = "0.15"
tracing-subscriber = "0.3.19"
tracing = "0.1"
base64 = "0.22"
image = "0.25.6"


[profile.release]
codegen-units = 1 # Compile crates one after another so the compiler can optimize better
lto = true        # Enables link to optimizations
opt-level = "s"   # Optimize for binary size
debug = true      # Enable debug symbols, for profiling

[profile.bench]
codegen-units = 256
lto = false
opt-level = 3

[profile.dev]
incremental = true
codegen-units = 256
overflow-checks = false

